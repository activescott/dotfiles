#!/usr/bin/env sh
THISDIR=$(cd $(dirname "$0"); pwd)
THISSCRIPT=$(basename $0)

die () {
	echo >&2 "ERROR: $@"
	exit 1
}

# FOR DEBUGGING
#cat <<- EOF > ~/src/activescott/dotfiles/$THISSCRIPT.debug.log
#	##################################################
#	all arguments:
#	$@
#	##################################################
#EOF

# note it passes args like this:
# for signing commit:
#  -Y sign -n git -f /var/folders/kz/915hdnkj3xz0bxdxr9g_n_b40000gn/T//.git_signing_key_tmp3FePoQ /var/folders/kz/915hdnkj3xz0bxdxr9g_n_b40000gn/T//.git_signing_buffer_tmpFevuRt
# verifying a signed commit:
#  -Y verify -n git -f /Users/scott/.gitconfig.gpg.ssh.allowedSignersFile -I ################################################## -s /var/folders/kz/915hdnkj3xz0bxdxr9g_n_b40000gn/T//.git_vtag_tmpFiWCq1 -Overify-time=20230115113022


# NOTE: verify works with this:
#  ssh-keygen $@

TSTAMP=$(date +"%Y-%m-%d-%H_%M_%S")

# we're running onlykey-agent but capturing stderr
OKERR="$THISDIR/$THISSCRIPT.$TSTAMP.stderr.temp"
onlykey-agent git@github.com -- ssh-keygen $@ \
	2>$OKERR

OKRESULT=$?

if [ $OKRESULT -eq 132 ]; then
	# now print the stderr to stderr if there is anything:
	OKERR_LINECOUNT=`wc -l < "$OKERR"`
	if [ $OKERR_LINECOUNT -eq 2 ]; then
		# a onlykey crash on macOS has exactly 2 lines in stderr and doesn't hurt anything: 
		# error is described at https://github.com/trustcrypto/onlykey-agent/issues/38
		# we ignore it and return success to git here so git will continue:
		echo "WARN: Ignoring onlykey-agent crash 132..."
		exit 0
	else
		# NOTE: one fix for a legitimate error is at https://github.com/onlykey/lib-agent/pull/9
		echo "ERROR (onlykey-agent): $(cat $OKERR)" >&1
		exit $OKRESULT
	fi
elif [ $OKRESULT -ne 0 ]; then
	echo "ERROR: onlykey-agent failed with unkonwn error code ${OKRESULT}. Detailed error: follows:"
	cat "$OKERR"
	exit $OKRESULT
else
	exit $OKRESULT
fi
