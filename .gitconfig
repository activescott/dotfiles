[user]
	email = scott@willeke.com
	name = Scott Willeke
	# Generate user.signingkey like this (for onlykey): 
	#  git config --global user.signingkey "key::$(onlykey-agent git@github.com)"
	# NOTE: 
	# > If gpg.format is set to ssh this can contain the path to either your private ssh key or the 
	# > public key when ssh-agent is used. Alternatively it can contain a public key prefixed with 
	# > key:: directly (e.g.: "key::ssh-rsa XXXXXX identifier"). The private key needs to be 
	# > available via ssh-agent.
	signingkey = key::ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIA8UwWAoWmmbgMeFbG531vlUHZju5cjw6B7oqS3Ni2V7 <ssh://git@github.com|ed25519>
	
[push]
	default = simple

[color]
	ui = true

[alias]
	outgoing = log @{upstream}.. #https://stackoverflow.com/a/6389348/51061
	st = status
	logg = log --pretty=oneline --abbrev-commit --graph --decorate --all
	logv = log --pretty=oneline --abbrev-commit --graph --decorate --all --show-signature
	who = shortlog -s
	serve = !git daemon --reuseaddr --verbose --base-path=. --export-all ./.git # https://git.wiki.kernel.org/index.php/Aliases#Serve_re

[core]
	autocrlf = input
	editor = code --wait

[diff]
	tool = default-difftool

[difftool "default-difftool"]
	cmd = code --disable-gpu --wait --diff $LOCAL $REMOTE

[hub]
	protocol = https

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
[init]
	defaultBranch = main
[pull]
	ff = only
[gpg]
	format = ssh
[commit]
	gpgsign = true

[gpg "ssh"]
	# git docs say that ~/ should work here but it doesn't :/ https://git-scm.com/docs/git-config#Documentation/git-config.txt-pathname
	# TODO: so need to either submit a patch to git or generate this file in the ~/scripts/setup
	program = /Users/scott/bin/onlykey-git-sign-commit
	allowedSignersFile = /Users/scott/.gitconfig.gpg.ssh.allowedSignersFile
